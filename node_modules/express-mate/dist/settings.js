"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var responseFormat = 'none';
var handleErrors = true;
var ignoreNativeErrors = false;
var Settings = /** @class */ (function () {
    function Settings() {
    }
    Object.defineProperty(Settings, "responseFormat", {
        /**
         * responseFormat
         */
        get: function () {
            return responseFormat;
        },
        set: function (value) {
            responseFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Settings, "handleErrors", {
        /**
         * handleErrors
         */
        get: function () {
            return handleErrors;
        },
        set: function (value) {
            handleErrors = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Settings, "ignoreNativeErrors", {
        /**
         * ignoreNativeErrors
         */
        get: function () {
            return ignoreNativeErrors;
        },
        set: function (value) {
            ignoreNativeErrors = value;
        },
        enumerable: true,
        configurable: true
    });
    return Settings;
}());
exports.Settings = Settings;
function injectSettings(obj) {
    return __assign({ responseFormat: responseFormat, ignoreNativeErrors: ignoreNativeErrors, handleErrors: handleErrors }, obj);
}
exports.injectSettings = injectSettings;
