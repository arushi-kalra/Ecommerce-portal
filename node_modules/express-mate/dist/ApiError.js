"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var http_status_1 = __importDefault(require("http-status"));
var Responder_1 = require("./Responder");
var settings_1 = require("./settings");
function lazyError(e) {
    return e && typeof e.stack === 'string' && typeof e.message === 'string';
}
exports.lazyError = lazyError;
function isApiError(e) {
    return lazyError(e) && Responder_1.isResponder(e);
}
exports.isApiError = isApiError;
function wrapError(res, err) {
    if (lazyError(err)) {
        return new ApiError(res, err);
    }
    else if (typeof err === 'string') {
        return new ApiError(res, err);
    }
    return undefined;
}
exports.wrapError = wrapError;
var ApiError = /** @class */ (function (_super) {
    __extends(ApiError, _super);
    function ApiError(res, data, meta) {
        if (meta === void 0) { meta = {}; }
        var _this = _super.call(this, ApiError.getMessage(data)) || this;
        Object.setPrototypeOf(_this, ApiError.prototype);
        if (lazyError(data)) {
            _this.stack = data.stack;
            _this.name = data.name;
        }
        _this.meta = meta;
        _this.res = res;
        return _this;
    }
    ApiError.getMessage = function (data) {
        if (lazyError(data)) {
            return data.message;
        }
        else if (typeof data === 'string') {
            return data;
        }
        else {
            return 'Unexpected error occurred';
        }
    };
    ApiError.respond = function (res, data, opt) {
        if (opt === void 0) { opt = {}; }
        var _a = opt.responseFormat, responseFormat = _a === void 0 ? settings_1.Settings.responseFormat : _a, meta = opt.meta;
        var instance = new ApiError(res, data, meta);
        return Responder_1.triggerResponder(instance, responseFormat);
    };
    Object.defineProperty(ApiError.prototype, "status", {
        get: function () {
            return ApiError.status;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApiError.prototype, "code", {
        get: function () {
            return ApiError.code;
        },
        enumerable: true,
        configurable: true
    });
    ApiError.prototype.raw = function () {
        this.res.status(this.code).send(this.message);
    };
    ApiError.prototype.jsend = function () {
        this.res.status(this.code).json(__assign(__assign({}, this.meta), { status: this.status, message: this.message }));
    };
    ApiError.status = 'error';
    ApiError.code = http_status_1.default.INTERNAL_SERVER_ERROR;
    return ApiError;
}(Error));
exports.ApiError = ApiError;
